[![Build status](https://ci.appveyor.com/api/projects/status/ry6ki3d31qneg5po/branch/grobid-iolines-swig-win32?svg=true)](https://ci.appveyor.com/project/boumenot/wapiti/branch/grobid-iolines-swig-win32)

This is an experimental version of Wapiti that utilizes a streaming
interace instead of file IO.  The original Wapiti code assume that all
data are a file on disk, whereas this experiment does not.  Wapiti
reads data in a line oriented fashion.  The streaming interface
provides a way to read or write data in a line oriented fashion.  This
makes is possible source data from non-file sources.

Wapiti binaries are available from [AppVeyor][bits].  Binaries are
64-bit and built against JDK 1.7.  See the [appveyor.yml][yml] for details
on re-creating the build on your machine.

### Sample

```java
import fr.limsi.wapiti.*;
import java.io.*;
import java.util.*;
import java.nio.charset.Charset;
import java.nio.file.*;

public class runme
{
    static {
        try {
            System.out.println("Loading the native example library ...");
            System.loadLibrary("libwapiti");
            System.out.println("...loaded!");
        } catch (UnsatisfiedLinkError e) {
            System.err.println("Native code library failed to load. See the chapter on Dynamic Linking Problems in the SWIG Java documentation for help.\n" + e);
            System.exit(1);
        }
    }

    public static void main(String[] args) throws Exception
        {
            System.out.println("defaultCharset=" + Charset.defaultCharset());
            
            try {
                System.out.println("loading model ...");
                MyWapitiIO ioA = new MyWapitiIO(
                    new FileInputStream("model.wapiti"),
                    null);

                System.out.println("labeling data ...");
                MyWapitiIO ioB = new MyWapitiIO(
                    new FileInputStream("author_header.txt"),
                    new FileOutputStream("output.txt"));

                WapitiModel model = new WapitiModel(ioA);
                model.label(ioB);

                ioA.close(); 
                ioB.close();

                byte[] bs = Files.readAllBytes(Paths.get("output.txt"));
                String output = new String(bs, "ISO-8859-1");
                System.out.println("++++++++++++++++++++++++++++++++++++++++++++++++++");
                System.out.println("++ output");
                System.out.println(output);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
}

class MyWapitiIO extends WapitiIO 
{
    private int count = 0;
    public int lines = 0;
    public int lines_out_count = 0;
    private BufferedReader reader;
    private OutputStream outputStream;

    public MyWapitiIO(
        InputStream inputStream,
        OutputStream outputStream) throws UnsupportedEncodingException
        {
            super();
            this.reader = new BufferedReader(
                new InputStreamReader(inputStream, "ISO-8859-1"));

            this.outputStream = outputStream;
        }

    @Override
    public String readline() {
        this.lines++;
        try {
            return this.reader.readLine();
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

    @Override 
    public void append(String bytes) {
        try {
            byte[] b = bytes.getBytes("ISO-8859-1");
            if (this.outputStream != null) {
                this.outputStream.write(b);
            }
            this.lines_out_count++;
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void close() {
        try {
            if (this.outputStream != null) {
                this.outputStream.flush();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
```

### Build Script

All of the binaries referenced below are available in the branch, or
available from [AppVeyor][bits].

```bat
"%JAVA_HOME%\bin\javac" -cp wapiti-1.5.0.jar -source 1.7 -target 1.7 runme.java
"%JAVA_HOME%\bin\jar" cvf runme.jar runme.class MyWapitiIO.class
"%JAVA_HOME%\bin\java" -Dfile.encoding=ISO-8859-1 -cp wapiti-1.5.0.jar;runme.jar runme
```

[grobid]: https://github.com/kermitt2/grobid
[bits]: https://ci.appveyor.com/project/boumenot/wapiti/branch/grobid-iolines-swig-win32/artifacts
[yml]: https://github.com/boumenot/Wapiti/blob/grobid-iolines-swig-win32/appveyor.yml
